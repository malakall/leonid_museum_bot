from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
)

user_states = {}

# –°–ø–∏—Å–æ–∫ —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤ –∏ –ø—É—Ç–∏ –∫ —Ñ–æ—Ç–æ –∏—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–∞—Ä—Ç–∏–Ω
artists = [
    "–í–∏–Ω—Å–µ–Ω—Ç –í–∞–Ω –ì–æ–≥",
    "–ü–∞–±–ª–æ –ü–∏–∫–∞—Å—Å–æ",
    "–ö–ª–æ–¥ –ú–æ–Ω–µ",
    "–õ–µ–æ–Ω–∞—Ä–¥–æ –¥–∞ –í–∏–Ω—á–∏",
    "–†–µ–º–±—Ä–∞–Ω–¥—Ç",
    "–°–∞–ª—å–≤–∞–¥–æ—Ä –î–∞–ª–∏",
    "–§—Ä–∏–¥–∞ –ö–∞–ª–æ"
]

descriptions = {
    "–í–∏–Ω—Å–µ–Ω—Ç –í–∞–Ω –ì–æ–≥": "–í–∞–Ω –ì–æ–≥ ‚Äî –ø–æ—Å—Ç–∏–º–ø—Ä–µ—Å—Å–∏–æ–Ω–∏—Å—Ç, –∏–∑–≤–µ—Å—Ç–µ–Ω —Å–≤–æ–∏–º–∏ —è—Ä–∫–∏–º–∏ –∫–∞—Ä—Ç–∏–Ω–∞–º–∏ –∏ –¥—Ä–∞–º–∞—Ç–∏—á–Ω–æ–π –∂–∏–∑–Ω—å—é.",
    "–ü–∞–±–ª–æ –ü–∏–∫–∞—Å—Å–æ": "–ü–∏–∫–∞—Å—Å–æ ‚Äî –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å –∫—É–±–∏–∑–º–∞, –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –≤–ª–∏—è—Ç–µ–ª—å–Ω—ã—Ö —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤ XX –≤–µ–∫–∞.",
    "–ö–ª–æ–¥ –ú–æ–Ω–µ": "–ú–æ–Ω–µ ‚Äî –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å –∏–º–ø—Ä–µ—Å—Å–∏–æ–Ω–∏–∑–º–∞, –º–∞—Å—Ç–µ—Ä –ø–µ—Ä–µ–¥–∞—á–∏ —Å–≤–µ—Ç–∞ –∏ —Ü–≤–µ—Ç–∞.",
    "–õ–µ–æ–Ω–∞—Ä–¥–æ –¥–∞ –í–∏–Ω—á–∏": "–î–∞ –í–∏–Ω—á–∏ ‚Äî –≥–µ–Ω–∏–π –í–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è, —Ö—É–¥–æ–∂–Ω–∏–∫, —É—á–µ–Ω—ã–π –∏ –∏–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å.",
    "–†–µ–º–±—Ä–∞–Ω–¥—Ç": "–†–µ–º–±—Ä–∞–Ω–¥—Ç ‚Äî –º–∞—Å—Ç–µ—Ä —Å–≤–µ—Ç–æ—Ç–µ–Ω–∏ –∏ –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–π –∂–∏–≤–æ–ø–∏—Å–∏ XVII –≤–µ–∫–∞.",
    "–°–∞–ª—å–≤–∞–¥–æ—Ä –î–∞–ª–∏": "–î–∞–ª–∏ ‚Äî —Å—é—Ä—Ä–µ–∞–ª–∏—Å—Ç, –∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–≤–æ–∏–º–∏ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ–±—Ä–∞–∑–∞–º–∏.",
    "–§—Ä–∏–¥–∞ –ö–∞–ª–æ": "–ö–∞–ª–æ ‚Äî –º–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∞—è —Ö—É–¥–æ–∂–Ω–∏—Ü–∞, –∏–∑–≤–µ—Å—Ç–Ω–∞—è –∞–≤—Ç–æ–ø–æ—Ä—Ç—Ä–µ—Ç–∞–º–∏ –∏ —è—Ä–∫–æ–π –ø–∞–ª–∏—Ç—Ä–æ–π."
}

photos = {
    "–í–∏–Ω—Å–µ–Ω—Ç –í–∞–Ω –ì–æ–≥": "src/van_gogh_star_night.png",
    "–ü–∞–±–ª–æ –ü–∏–∫–∞—Å—Å–æ": "src/picasso_guernica.png",
    "–ö–ª–æ–¥ –ú–æ–Ω–µ": "src/monet_water_lilies.png",
    "–õ–µ–æ–Ω–∞—Ä–¥–æ –¥–∞ –í–∏–Ω—á–∏": "src/da_vinci_mona_lisa.png",
    "–†–µ–º–±—Ä–∞–Ω–¥—Ç": "src/rembrandt_night_watch.png",
    "–°–∞–ª—å–≤–∞–¥–æ—Ä –î–∞–ª–∏": "src/dali_persistence_memory.png",
    "–§—Ä–∏–¥–∞ –ö–∞–ª–æ": "src/frida_kahlo_self_portrait.png"
}

def create_main_keyboard():
    keyboard = [[KeyboardButton(artist)] for artist in artists]
    keyboard.append([KeyboardButton("–û –Ω–∞—Å"), KeyboardButton("–ü–æ–º–æ—â—å")])
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)

def add_back_button():
    keyboard = [[KeyboardButton("–ù–∞–∑–∞–¥")]]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    welcome_text = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω-–≤—ã—Å—Ç–∞–≤–∫—É –º—É–∑–µ—è!\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —ç–∫—Å–ø–æ–∑–∏—Ü–∏—é, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ —Ö—É–¥–æ–∂–Ω–∏–∫–µ."
    )
    keyboard = create_main_keyboard()
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é (caption)
        await context.bot.send_photo(
            chat_id,
            photo=open("src/musem.png", "rb"),
            caption=welcome_text,
            reply_markup=keyboard
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
        await context.bot.send_message(chat_id, text=welcome_text, reply_markup=keyboard)
    user_states[chat_id] = "MAIN_MENU"

async def about_us(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = (
        "üèõÔ∏è –û–Ω–ª–∞–π–Ω-–≤—ã—Å—Ç–∞–≤–∫–∞ –º—É–∑–µ—è –ø–æ—Å–≤—è—â–µ–Ω–∞ –≤–µ–ª–∏–∫–∏–º —Ö—É–¥–æ–∂–Ω–∏–∫–∞–º.\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏ —É–≤–∏–¥–µ—Ç—å —Ä–∞–±–æ—Ç—ã –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤.\n"
        "–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ–º –≤ –º–∏—Ä –∏—Å–∫—É—Å—Å—Ç–≤–∞!"
    )
    try:
        await context.bot.send_photo(chat_id, photo=open("src/about_museum.png", "rb"))
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
    await context.bot.send_message(chat_id, text=text, reply_markup=add_back_button())
    user_states[chat_id] = "ABOUT_US"

async def help_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = (
        "üí¨ –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É: @JI_E_o_H_u_D\n"
        "üìö –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ, –≤—ã–±—Ä–∞–≤ —ç–∫—Å–ø–æ–∑–∏—Ü–∏—é."
    )
    await context.bot.send_message(chat_id, text=text, reply_markup=add_back_button())
    user_states[chat_id] = "HELP_MENU"

async def show_exposition(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    artist = update.message.text
    if artist in artists:
        text = f"üé® {artist}\n\n{descriptions.get(artist, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è.')}"
        photo_path = photos.get(artist)
        if photo_path:
            try:
                await context.bot.send_photo(chat_id, photo=open(photo_path, "rb"))
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        await context.bot.send_message(chat_id, text=text, reply_markup=add_back_button())
        user_states[chat_id] = "EXPOSITION"
    else:
        await context.bot.send_message(chat_id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —ç–∫—Å–ø–æ–∑–∏—Ü–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞.")

async def handle_back(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    state = user_states.get(chat_id, "MAIN_MENU")
    if state in ["ABOUT_US", "HELP_MENU", "EXPOSITION"]:
        await start(update, context)
    else:
        await start(update, context)

async def unknown_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    await context.bot.send_message(chat_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é.", reply_markup=create_main_keyboard())

def main():
    application = ApplicationBuilder().token("8071703401:AAG5QqtxUWmxKJixzhxCF359LTHSMeC57qY").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_message))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("^(" + "|".join(artists) + ")$"), show_exposition))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("–û –Ω–∞—Å"), about_us))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("–ü–æ–º–æ—â—å"), help_message))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("–ù–∞–∑–∞–¥"), handle_back))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, unknown_command))

    application.run_polling()

if __name__ == "__main__":
    main()
